2021-1-8
Git相关：
  设置签名：（必须的）
   2种：项目级别/仓库级别
   git config user.name tom_pro
   git config user.email tom_pro@aliyun.com
   git config --global user.name

   查看状态：
    git status
   添加到暂存区：
    git add file_name
   提交到本地库：
    git commit -m "message" file_name
   查看历史记录：
    git log
    git log --pretty=oneline
    git reflog
   前进后退:
   git reset --hard/mixed/soft [局部索引值]
      参数比较：（可以类比三个人站一排，谁愿意参加站前一步）
      --soft 仅仅在本地库移动HEAD指针
      --mixed 在本地库移动HEAD指针，重置暂存区
      --hard  在本地库移动HEAD指针，重置暂存区，重置本地库
   删除文件并找回 
      前提：删除前，文件存在时的状态提交到了本地库。 
      操作：git reset --hard [指针位置] 
      删除操作已经提交到本地库：指针位置指向历史记录 
      删除操作尚未提交到本地库（添加到暂存区了）：指针位置使用 HEAD

   比较文件
    git diff 111.txe
    将工作区中的文件和暂存区进行比较(也即将工作区的内容add 到暂存区后 git diff后无变化)

   git diff [本地库中历史版本] [文件名] 
    将工作区中的文件和本地库历史记录比较 
    不带文件名比较多个文件

分支：branch
创建：git branch hot_fix
git checkout hot_fix
git merge hot_fix
git commit -m "merge"  不能带具体的文件名

产生冲突：
master分支修改文件  add  commit
checkout hot_fix 修改文件 add commit
git merge hot_fix


git的远程仓库github
创建本地库
github 上创建远程库
本地库push 远程库：知道远程库的地址位置
   https://github.com/bestwishCT/huashan.git  地址太长 git 本地保存地址
      git remote -v
      git remote add origin https://github.com/bestwishCT/huashan.git
推送操作:
    git push origin master
    问题：输入github用户名密码侯报错：1758xxx83@qq.com
    $ git push origin master
    Logon failed, use ctrl+c to cancel basic credential prompt.
    Username for 'https://github.com':
    原因：老版本的不支持了，下载新的git
克隆操作：
    cd ..
    git clone https://github.com/bestwishCT/huashan.git

    邀请团队成员加入（切换账户的时候清楚windows凭证   控制面板-凭证管理器）

    pull   fetch+merge
    git fetch origin master
      git checkout origin/master  原程
      git checkout master
    git merge origin/master

   操作要点：
     如果不是基于github远程库的最新版 不能push,必须先pull，如果进入冲突 解决即可（注意commit -m 不加文件名称）
//标准笔记，摘录
1 分支管理
   什么是分支？ 
      在版本控制过程中，使用多条线同时推进多个任务。
   分支的好处？ 
      同时并行推进多个功能开发，提高开发效
      各个分支在开发过程中，如果某一个分支开发失败，不会对其他分支有任 何影响。失败的分支删除重新开始即可。
   分支操作 
     1 创建分支 git branch [分支名] 
     2 查看分支 git branch -v 
     3 切换分支 git checkout [分支名] 
  合并分支 
     第一步：切换到接受修改的分支（被合并，增加新内容）上 git checkout [被合并分支名]
     第二步：执行 merge 命令 
       git merge [有新内容分支名]
  解决冲突 
     冲突的表现
     冲突的解决 
       第一步：编辑文件，删除特殊符号 
       第二步：把文件修改到满意的程度，保存退出 
       第三步：git add [文件名] 
       第四步：git commit -m "日志信息" (注意：此时 commit 一定不能带具体文件名)
2 Git&GitHub
  创建远程库地址别名
    git remote -v 查看当前所有远程地址别名
    git remote add [别名] [远程地址]
      eg:git remote add origin https://github.com/bestwishCT/huashan.git
  推送（push）
    git push [别名] [分支名]
    eg:git push origin master
  克隆(clone)
    git origin [远程地址]
    克隆的效果：
      完整的把远程库下载到本地
      创建 origin 远程地址别名
      初始化本地库
  拉取(pull=fetch+merge)
    git fetch [远程库地址别名] [远程分支名]
    git merge [远程库地址别名/远程分支名]
    git pull [远程库地址别名] [远程分支名]
  解决冲突
   要点 
    如果不是基于 GitHub 远程库的最新版所做的修改，不能推送，必须先拉 取。 
    拉取下来后如果进入冲突状态，则按照“分支冲突解决”操作解决即可。 
   类比
     债权人：老王 
     债务人：小刘
     老王说：10 天后归还。小刘接受，双方达成一致。  老王媳妇说：5天后归还。小刘不能接受。老王媳妇需要找老王确认后再 执行。
 3 跨团队协作（未更新）
=======================分割线=======================================================================
Docker相关：
 解释：Docker支持将软件编译成一个镜像；然后在镜像中各种软件做好配置，将镜像发布出去，
 其他使用者可以直接使用这个镜像。运行中的这个镜像称为容器,容器启动是非常快速的。
 一些命令：
 启动：systemctl start docker
 将docker服务设为开机启动：systemctl enable docker
 镜像操作：
 检索：docker search 关键字。（eg:docker search redis）
 拉取：docker pull 镜像名:tag (eg:docker pull elasticsearch:6.5.3)
 列表：docker images
 删除镜像：docker rmi image-id
 容器操作：
 列表：查看运行中的容器 docker ps (-a 查看所有)
 停止：docker stop container-name/container-id 停止当前你运行的容器
 启动：docker start container-name/container-id 启动容器
 删除：docker rm container-id 删除指定容器
 端口映射：p 6379:6379
          eg:docker run -d -p 6379:6379 --name myredis docker.io/redis
          -p: 主机端口(映射到)容器内部的端口
 容器日志： docker logs container-name/container-id
 进入容器内部：docker exec -it id /bin/bash
一个栗子：
  Docker Redis
  运行容器
  docker run -itd --name myredis -p 6379:6379 redis:5.0.8
  启动服务
   docker exec -it redis-test /bin/bash
   redis-cli
   set test 1

其他相关：
 org.springframework.web.context.ContextLoader的
 configureAndRefreshWebApplicationContext方法中完成所有bean的解析、加载和初始化。